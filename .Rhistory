wd()
pwd()
cls
library("rjson", lib.loc="~/R/win-library/3.2")
R1 <- fromJSON(file = ("Data/66101100_Vector.json"))
R1 <- fromJSON(file = ("Data/A_66101100_Vector.json"))
R1<- R1$TimeVector
library("rjson", lib.loc="~/R/win-library/3.2")
R1 <- fromJSON(file = ("Data/A_661100_Vector"))
R1 <- R1$TimeVector
library("rjson", lib.loc="~/R/win-library/3.2")
R1 <- fromJSON(file = ("Data/A_661001100_Vector"))
R1 <- R1$TimeVector
R1 <- R1$TimeVector
library("rjson", lib.loc="~/R/win-library/3.2")
source('~/aa_School/IndependentProject/Miner/S1.R')
library("rjson", lib.loc="~/R/win-library/3.2")
library("rjson", lib.loc="~/R/win-library/3.2")
R1 <- fromJSON(file = ("Data/A_661001100_Vector"))
R1 <- fromJSON(file = ("Data/A_66101100_Vector"))
R1 <- fromJSON(file = ("Data/A_66101100_Vector"))
R1 <- fromJSON(file = ("Data/A_66101100_Vector.json"))
R1 <- R1$TimeVector
S1.R
R1 <- R1$TimeVector
R1 <- R1$TimeVector
R6 <- fromJSON(file = ("Data/A_8411197_Vector.json"))
Rscript S1.R
S1.R
source('~/aa_School/IndependentProject/Miner/S1.R')
R1
dataM <- Matrix()
Matrix::Matrix()
library(Matrix)
dataM <- Matrix()
dataM <- rbind(R1)
dataM <- rbind(R2)
dataM <- rbind(R3)
dataM <- rbind(R4)
dataM
View(dataM)
View(dataM)
dataM <- rbind(R1,R2,R3)
View(dataM)
View(dataM)
source('~/aa_School/IndependentProject/Miner/S1.R')
View(dataM)
dimnames(dataM) <- list(c("R1","R2"))
dataM <- rbind(R1,R2,R3)
dimnames(dataM) <- list( c("R1","R2", R3) )
dimnames(dataM) <- list( c("R1","R2", "R3") )
View(dataM)
View(dataM)
dimnames(dataM) <- list( c("Sensor1","Sensor2", "Sensor3") )
View(dataM)
source(S1.R)
source("S1.R")
source("S1.R")
library("mclust", lib.loc="~/R/win-library/3.2")
freq <- itemFrequency(dataM)
library("arules", lib.loc="~/R/win-library/3.2")
freq <- itemFrequency(dataM)
trans <- as(dataM, "transactions")
trans
view(trans)
View(trans)
inspect(trans)
ruleInduction(trans)
detach("package:mclust", unload=TRUE)
trans
summary(trans)
source('~/aa_School/IndependentProject/Miner/S1.R')
source('~/aa_School/IndependentProject/Miner/S1.R')
View(dataM)
colnames(dataM) <- list( r("66101100","6697115","67111111","67117112","679798","70114105","7710599","7797105","8310197","83104111","84111105","8411197"))
colnames(dataM) <- list( c("66101100","6697115","67111111","67117112","679798","70114105","7710599","7797105","8310197","83104111","84111105","8411197"))
source('~/aa_School/IndependentProject/Miner/S1.R')
trans <- as(dataM, "transactions")
inspect(trans)
image(trans)
trans <- as(dataM, "transactions")
image(dataM)
image(R1)
del
del()
source('~/aa_School/IndependentProject/Miner/S1.R')
source('~/aa_School/IndependentProject/Miner/S1.R')
source('~/aa_School/IndependentProject/Miner/S1.R')
rownames(dataM, do.NULL = FALSE, prefix="T")
View(dataM)
View(dataM)
View(dataM)
dimnames(dataM) <- list( rownames(dataM, do.NULL = FALSE, prefix="T"))
dataTrans <- as(dataM, "transactions")
summary(dataTrans)
library("arules", lib.loc="~/R/win-library/3.2")
itemFrequencyPlot(dataTrans, support = 0.1, cex.names)
itemFrequencyPlot(dataTrans, support = 0.1, cex.names = 0.8)
itemFrequencyPlot(dataTrans, support = 1, cex.names = 0.8)
itemFrequencyPlot(dataTrans, support = 0.9, cex.names = 0.8)
itemFrequencyPlot(dataTrans, support = 0.01, cex.names = 0.8)
itemFrequencyPlot(dataTrans, support = 0.00000001, cex.names = 0.8)
source('~/aa_School/IndependentProject/Miner/S1.R')
dataTrans <- as(dataM, "transactions")
itemFrequencyPlot(dataTrans, support = 0.00000001, cex.names = 0.8)
itemFrequencyPlot(dataTrans, support = 0.00000001, cex.names = 0.8)
rules <- apriori(dataTrans, parameter = list(support = 0.01, confidence = 0.8)
summary(rules)
summary(rules)
rules <- apriori(dataTrans, parameter = list(support = 0.01, confidence = 0.8)
apriori
rules <- apriori(dataTrans, parameter = list(support = 0.01, confidence = 0.5)
l
rules <- apriori(dataTrans, )
rules
eclat(dataTrans)
ec < - eclat(dataTrans)
ec <- eclat(dataTrans)
ec
ec
summary(ec)
View(dataM)
inspect(ec)
source('~/aa_School/IndependentProject/Miner/S1.R')
View(dataM)
source('~/aa_School/IndependentProject/Miner/S1.R')
source('~/aa_School/IndependentProject/Miner/S1.R')
source('~/aa_School/IndependentProject/Miner/S1.R')
View(dataM)
apriori(dataM)
eclat(dataM)
view(eclat(dataM))
View(eclat(dataM))
itemFrequencyPlot(dataM)
itemFrequencyPlot(dataTrans)
library("pdc", lib.loc="~/R/win-library/3.2")
dataClust <-  pdclust(dataM, m = NULL, t=NULL,dovergence= symmetricAlphaDivergence,clustering.method = "complete" )
dataClust <-  pdclust(dataM, m = NULL, t=NULL,divergence= symmetricAlphaDivergence,clustering.method = "complete" )
plot(dataClust, labels = NULL, type = "rectangle", cols="black", timeseries.as.labels = TRUE, p.values = F)
plot(dataClust, labels = NULL, type = "rectangle", cols="black", timeseries.as.labels = FALSE, p.values = F)
source('~/aa_School/IndependentProject/Miner/S1.R')
source('~/aa_School/IndependentProject/Miner/S1.R')
itemFrequencyPlot(dataTrans)
library("nlme", lib.loc="~/R/win-library/3.2")
detach("package:nlme", unload=TRUE)
library("mclust", lib.loc="~/R/win-library/3.2")
library("graphics", lib.loc="C:/Program Files/R/R-3.2.4revised/library")
